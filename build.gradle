
apply plugin: 'java'

ext.packaging = 'jar'

repositories {
    mavenCentral()
}

configurations {
    provided
}

sourceSets {
    test {
        java {
            srcDirs  = ['src/spec/java', 'src/test/java']
        }
    }
    main.compileClasspath += configurations.provided
    test.compileClasspath += configurations.provided
    test.runtimeClasspath += configurations.provided
}

dependencies {
    compile group: 'com.google.guava', name: 'guava', version: '14.0.1'
    compile group: 'com.google.code.findbugs', name: 'jsr305', version: '1.3.9'
    compile group: 'com.google.gag', name: 'gag', version: '1.0.1'
    compile group: 'com.squareup.dagger', name: 'dagger', version: '1.0.1'
    provided group: 'com.squareup.dagger', name: 'dagger-compiler', version: '1.0.1'

    testCompile group: 'junit', name: 'junit', version: '4.11', transitive: false
    testCompile group: 'org.mockito', name: 'mockito-core', version: '1.9.5', transitive: false
    testCompile group: 'org.hamcrest', name: 'hamcrest-core', version: '1.3', transitive: false
    testCompile group: 'org.hamcrest', name: 'hamcrest-library', version: '1.3', transitive: false
}

sourceCompatibility = 1.7
targetCompatibility = 1.7

tasks.withType(JavaCompile) {
    options.compilerArgs = ['-Werror', '-Xlint', '-Xlint:-processing']
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from 'build/docs/javadoc'
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

artifacts {
    archives jar
    archives javadocJar
    archives sourcesJar
}